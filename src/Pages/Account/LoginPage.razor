@layout Shared.EmptyLayout
@page "/login"
@using System.ComponentModel.DataAnnotations;

@inject HttpClient httpClient

<div class="login-page">
    <div class="login-box">
        <div class="login-logo">
            <a href="/"><b>Inn</b>Spire</a>
        </div>
        <!-- /.login-logo -->
        <div class="card">
            <div class="card-body login-card-body">
                <p class="login-box-msg">Sign in to start your session</p>

                <EditForm EditContext=@editContext Model="@model" OnValidSubmit="Login">
                    <DataAnnotationsValidator />
                    <div class="input-group">
                        <input @bind=@model.Username class="form-control" placeholder="Email" />
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-envelope"></span>
                            </div>
                        </div>
                        
                    </div>
                    <div class="input-group mb-3">
                        <ValidationMessage For="() => model.Username" />
                    </div>
                    <div class="input-group">
                        <input type="password" class="form-control" placeholder="Password">
                        <div class="input-group-append">
                            <div class="input-group-text">
                                <span class="fas fa-lock"></span>
                            </div>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <ValidationMessage For="() => model.Password" />
                    </div>

                    <div class="row">
                        <div class="col-8">
                            <div class="icheck-primary">
                                <input type="checkbox" id="remember">
                                <label for="remember">
                                    Remember Me
                                </label>
                            </div>
                        </div>
                        <!-- /.col -->
                        <div class="col-4">
                            <button type="submit" class="btn btn-primary btn-block">Sign In</button>
                        </div>
                        <!-- /.col -->
                    </div>
                </EditForm>

                @*<div class="social-auth-links text-center mb-3">
                    <p>- OR -</p>
                    <a href="#" class="btn btn-block btn-primary">
                        <i class="fab fa-facebook mr-2"></i> Sign in using Facebook
                    </a>
                    <a href="#" class="btn btn-block btn-danger">
                        <i class="fab fa-google-plus mr-2"></i> Sign in using Google+
                    </a>
                </div>*@
                <!-- /.social-auth-links -->

                <p class="mb-1">
                    <a href="forgot-password.html">I forgot my password</a>
                </p>
                <p class="mb-0">
                    <a href="register.html" class="text-center">Register a new membership</a>
                </p>
            </div>
            <!-- /.login-card-body -->
        </div>
    </div>
</div>


@code {
    private LoginModel model = new();

    private EditContext? editContext; 

    private class LoginModel
    {
        [Required]
        public string? Username { get; set; } = null;

        [Required]
        public string? Password { get; set; } = null;
    }

    private class LoginResponse
    {
        public bool LoginValid { get; set; }

        public string? Token { get; set; }

        public string? FirstName { get; set; }

        private string? LastName { get; set; }

        private string? Username { get; set; }
    }

    private async Task Login()
    {
        if (editContext == null)
            return;

        var valid = editContext.Validate();

        if (!valid)
            return;

        var content = JsonContent.Create(model);
        var result = await httpClient.PostAsync(httpClient.BaseAddress + "/api/user/login", content);
        if (result.StatusCode == System.Net.HttpStatusCode.OK)
        {
            // Check for wrong username or password
            var response = await content.ReadFromJsonAsync<LoginResponse>();

            // Check for login token
        }
    }
}
